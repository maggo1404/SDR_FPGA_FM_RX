// Code generated by Icestudio 0.10

`default_nettype none

//---- Top entity
module main (
 input v2bbed9,
 input v283d7c,
 input v6568e0,
 input vc35049,
 input v096e4d,
 input v8580d3,
 input v42b0fd,
 input v3ce4e3,
 input vclk
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 wire w4;
 wire w5;
 wire w6;
 wire w7;
 wire [0:7] w8;
 wire [0:7] w9;
 wire [0:7] w10;
 wire [0:7] w11;
 wire [0:7] w12;
 wire [0:7] w13;
 wire [0:15] w14;
 wire [0:7] w15;
 wire w16;
 wire w17;
 wire w18;
 assign w0 = v2bbed9;
 assign w1 = v283d7c;
 assign w2 = v6568e0;
 assign w3 = vc35049;
 assign w4 = v096e4d;
 assign w5 = v8580d3;
 assign w6 = v42b0fd;
 assign w7 = v3ce4e3;
 assign w16 = vclk;
 v1580b8 v2f2466 (
  .v7f6755(w9),
  .v3b63ae(w10),
  .v9e41c3(w16),
  .v23125b(w17)
 );
 v3407b9 vb3e602 (
  .v7bca47(w0),
  .v9a82b6(w1),
  .v703213(w2),
  .vefa3a9(w3),
  .vd84a57(w4),
  .vf8041d(w5),
  .vee8a83(w6),
  .v03aaf0(w7),
  .va9ac17(w8)
 );
 main_vb04103 vb04103 (
  .i(w13),
  .load(w18)
 );
 main_v5706e6 v5706e6 (
  .i1(w11),
  .i2(w12),
  .o(w13)
 );
 v2224a4 v408aac (
  .v1402b5(w14),
  .v1bb711(w18)
 );
 v306ca3 v9028da (
  .v91b9c1(w14),
  .vef5eee(w15)
 );
 v75f5ce vf9290e (
  .vaf0af2(w15),
  .vad9154(w17)
 );
 main_v69c3c4 v69c3c4 (
  .i(w8),
  .o1(w9),
  .o2(w12)
 );
 main_v831c82 v831c82 (
  .i(w10),
  .o2(w11)
 );
endmodule

//---- Top entity
module v1580b8 #(
 parameter v438624 = 0
) (
 input v9e41c3,
 input [7:0] v7f6755,
 input v23125b,
 output [7:0] v3b63ae
);
 localparam p0 = v438624;
 wire w1;
 wire w2;
 wire [0:7] w3;
 wire [0:7] w4;
 assign w1 = v9e41c3;
 assign w2 = v23125b;
 assign w3 = v7f6755;
 assign v3b63ae = w4;
 v1580b8_vd976a7 #(
  .INI(p0)
 ) vd976a7 (
  .clk(w1),
  .load(w2),
  .d(w3),
  .q(w4)
 );
endmodule

//---------------------------------------------------
//-- Reg-8-verilog
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Reg-8-verilog: 8 bits Register with load input. Verilog implementation
//---------------------------------------------------

module v1580b8_vd976a7 #(
 parameter INI = 0
) (
 input clk,
 input [7:0] d,
 input load,
 output [7:0] q
);
 //-- Generic register
 //-- Number of bits
 localparam N = 8;
 
 //-- Initial value
 reg [N-1:0] q = INI;
 
 always @(posedge clk)
 
   //-- The value is load only if  
   //-- load is 1
   if (load == 1'b1)
     q <= d;
   
 
 
endmodule
//---- Top entity
module v3407b9 (
 input v7bca47,
 input v9a82b6,
 input v703213,
 input vefa3a9,
 input vd84a57,
 input vf8041d,
 input vee8a83,
 input v03aaf0,
 output [7:0] va9ac17
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 wire [0:7] w4;
 wire w5;
 wire w6;
 wire w7;
 wire w8;
 assign w0 = vee8a83;
 assign w1 = v03aaf0;
 assign w2 = vf8041d;
 assign w3 = vd84a57;
 assign va9ac17 = w4;
 assign w5 = vefa3a9;
 assign w6 = v703213;
 assign w7 = v9a82b6;
 assign w8 = v7bca47;
 v3407b9_v9a2a06 v9a2a06 (
  .i1(w0),
  .i0(w1),
  .i2(w2),
  .i3(w3),
  .o(w4),
  .i4(w5),
  .i5(w6),
  .i6(w7),
  .i7(w8)
 );
endmodule

//---------------------------------------------------
//-- Bus8-Join-all
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Bus8-Join-all: Join all the wires into a 8-bits Bus
//---------------------------------------------------

module v3407b9_v9a2a06 (
 input i7,
 input i6,
 input i5,
 input i4,
 input i3,
 input i2,
 input i1,
 input i0,
 output [7:0] o
);
 assign o = {i7, i6, i5, i4, i3, i2, i1, i0};
 
endmodule
//---- Top entity
module v2224a4 (
 input v1bb711,
 output [15:0] v1402b5
);
 wire w0;
 wire [0:15] w1;
 assign w0 = v1bb711;
 assign v1402b5 = w1;
 v2224a4_v9e01be v9e01be (
  .i(w0),
  .o(w1)
 );
endmodule

//---------------------------------------------------
//-- Copy-16-verilog
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Copy-16: Copy the input wire twice and generate a 16 bits Bus output (Verilog implementation)
//---------------------------------------------------

module v2224a4_v9e01be (
 input i,
 output [15:0] o
);
 //-- Number of bits
 localparam N=16;
 
 assign o = {N{i}};
 
endmodule
//---- Top entity
module v306ca3 (
 input [15:0] v91b9c1,
 output [7:0] vef5eee,
 output [7:0] vd3ef3b
);
 wire [0:15] w0;
 wire [0:7] w1;
 wire [0:7] w2;
 assign w0 = v91b9c1;
 assign vef5eee = w1;
 assign vd3ef3b = w2;
 v306ca3_v9a2a06 v9a2a06 (
  .i(w0),
  .o1(w1),
  .o0(w2)
 );
endmodule

//---------------------------------------------------
//-- Bus16-Split-half
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Bus16-Split-half: Split the 16-bits bus into two buses of the same size
//---------------------------------------------------

module v306ca3_v9a2a06 (
 input [15:0] i,
 output [7:0] o1,
 output [7:0] o0
);
 assign o1 = i[15:8];
 assign o0 = i[7:0];
endmodule
//---- Top entity
module v75f5ce (
 input [7:0] vaf0af2,
 output vad9154,
 output v07f009,
 output vb4e950,
 output vbd4e50,
 output v4f1fd3,
 output vda577d,
 output v3f8943,
 output v64d863
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 wire w4;
 wire w5;
 wire w6;
 wire w7;
 wire [0:7] w8;
 assign v3f8943 = w0;
 assign v64d863 = w1;
 assign vda577d = w2;
 assign v4f1fd3 = w3;
 assign vbd4e50 = w4;
 assign vb4e950 = w5;
 assign v07f009 = w6;
 assign vad9154 = w7;
 assign w8 = vaf0af2;
 v75f5ce_v9a2a06 v9a2a06 (
  .o1(w0),
  .o0(w1),
  .o2(w2),
  .o3(w3),
  .o4(w4),
  .o5(w5),
  .o6(w6),
  .o7(w7),
  .i(w8)
 );
endmodule

//---------------------------------------------------
//-- Bus8-Split-all
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Bus8-Split-all: Split the 8-bits bus into its wires
//---------------------------------------------------

module v75f5ce_v9a2a06 (
 input [7:0] i,
 output o7,
 output o6,
 output o5,
 output o4,
 output o3,
 output o2,
 output o1,
 output o0
);
 assign o7 = i[7];
 assign o6 = i[6];
 assign o5 = i[5];
 assign o4 = i[4];
 assign o3 = i[3];
 assign o2 = i[2];
 assign o1 = i[1];
 assign o0 = i[0];
endmodule

module main_vb04103 (
 input [0:7] i,
 output load
);
 // OR logic gate
 
 assign load = i[0] | i[1] | i[2] | i[3] | i[4] | i[5] | i[6] | i[7];
endmodule

module main_v5706e6 (
 input [0:7] i1,
 input [0:7] i2,
 output [0:7] o
);
 assign o = i1[0:7] ^ i2[0:7];
endmodule

module main_v69c3c4 (
 input [7:0] i,
 output [7:0] o1,
 output [7:0] o2
);
 assign o1 = i[7:0];
 assign o2 = i[7:0];
endmodule

module main_v831c82 (
 input [7:0] i,
 output [7:0] o1,
 output [7:0] o2
);
 assign o1 = i[7:0];
 assign o2 = i[7:0];
endmodule
